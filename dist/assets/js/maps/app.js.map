{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["'use strict';\n\n$(document).ready(function() {\n\n  // set the window location on boot.\n  updateWindowLocation();\n\n  /**\n   * Click to switch Tabs\n   */\n  $('ul.box-menu li').on('click touchstart', function() {\n    var tab_id = $(this).attr('data-tab');\n    console.log(tab_id);\n    if (tab_id == 'tab-1') {\n      window.location.hash = '#myuploads';\n    } else if (tab_id == 'tab-2') {\n      window.location.hash = '#myfiles';\n    }\n    updateWindowLocation();\n  });\n\n  /**\n   * Hits the JSON listing of the Files in the\n   * upload directory and updates the view\n   */\n  function lookupFileList() {\n    var tdata = {}; // JSON data object that feeds the template\n\n    // Initialise page\n    var initPage = function() {\n\n      // Retrieve the server data and then initialise the page\n      $.getJSON( \"functions/get.php\", function(data) {\n          $.extend(tdata, data);\n        }\n      )\n\n      // When AJAX calls are complete parse the template\n      // replacing mustache tags with vars\n      $(document).ajaxStop(function() {\n        var template = $('#file-template').html();\n        var info = Mustache.to_html(template, tdata);\n        $('#js-file-list').html(info);\n      });\n    }();\n\n  }\n\n  /**\n   * Set the tab based on the window hash location\n   */\n  function updateWindowLocation() {\n\n    if (window.location.hash == '#myuploads') {\n      $('ul.box-menu li').removeClass('active');\n      $('.tab-content').removeClass('active');\n      $('.tab-1').addClass('active');\n    } else if (window.location.hash == '#myfiles') {\n      $('ul.box-menu li').removeClass('active');\n      $('.tab-content').removeClass('active');\n      $('.tab-2').addClass('active');\n    } else {\n      window.location.hash = '#myuploads'\n    }\n\n    lookupFileList();\n  };\n\n  /**\n   * Update elements after a file has been chosen to be uploaded\n   */\n  $('input:file').change(function() {\n    var fileName = $(this).val();\n    $('#js-filename').html(fileName); // get the filename for the placeholder\n    $('.custom-file-upload').hide(); // hide upload button\n    $('#js-title').text('Now go ahead and submit it!');\n    $('#js-submit').show();\n    $('#js-progressbox').show();\n  });\n\n  /**\n   * Submit the upload form\n   * @return false     always return false to prevent standard browser submit and page navigation\n   */\n  $('#js-upload-form').submit(function() {\n    var uploadOptions = {\n      target: '#js-output', // target element(s) to be updated with server response\n      beforeSubmit: beforeSubmitUpload,\n      success: afterSuccessfulUpload,\n      uploadProgress: OnProgressUpload,\n      resetForm: true // reset the form after successful submit\n    };\n    $(this).ajaxSubmit(uploadOptions);\n    return false;\n  });\n\n  /**\n   * After succesful file upload (when server response)\n   */\n  function afterSuccessfulUpload() {\n\n    $('#js-output').show(); // show notification of success/failure button\n    $('#js-progressbox').delay(1000).fadeOut(); // hide progress bar\n    $('#js-output').delay(3500).fadeOut(); // hide notification after 3.5 seconds\n\n    $('.custom-file-upload').show(); // show upload button so a person can choose another file\n    $('#js-submit').hide(); // hide submit until after a person chooses a file\n    $('#js-title').text('Choose a file to upload'); // reset placeholder text\n    $('#js-filename').html('<span class=\"no-file-selected\">No File Selected</span>'); // reset placeholder text\n\n    incrementNotificationCount();\n    updateWindowLocation();\n\n  }\n\n  /**\n   * Check file size before uploading.\n   *\n   * @return success|failure\n   */\n  function beforeSubmitUpload() {\n\n    //check whether browser fully supports all File API\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n\n      if (!$('#js-file').val()) //check empty input filed\n      {\n        ErrorReset('You didn\\'t upload anything.');\n        return false;\n      }\n\n      var fsize = $('#js-file')[0].files[0].size; //get file size\n      var ftype = $('#js-file')[0].files[0].type; // get file type\n\n      // Allowed file size is less than 25 MB (1048576)\n      if (fsize > 50000) {\n        ErrorReset('<b>' + bytesToSize(fsize) + '</b> Too big file! <br />File is too big, it should be less than 50KB.');\n        return false;\n      }\n\n      $('#js-submit').hide();\n      $('#js-output').show().html('');\n    } else {\n      // js-output error to older unsupported browsers that doesn't support HTML5 File API\n      ErrorReset('Please upgrade your browser, because your current browser lacks some new features we need!');\n      return false;\n    }\n\n  }\n\n  /**\n   * Cound the upload progress percentage\n   *\n   * @param event                 The browser event\n   * @param integer  position\n   * @param integer  total\n   * @param integer  percentComplete\n   */\n  function OnProgressUpload(event, position, total, percentComplete) {\n    // Progress bar\n    $('#js-progressbox').show();\n    $('#js-progressbar').width(percentComplete + '%'); //update progressbar percent complete\n    $('#js-statustxt').html(percentComplete + '%'); //update status text\n    if (percentComplete > 50) {\n      $('#js-statustxt').css('color', '#000'); //change status text to white after 50%\n    }\n  }\n\n  /**\n   * Alert message when an error occurs\n   *\n   * @param string  message   Error Message Details\n   */\n  function ErrorReset(message) {\n    $('#js-output').show().html('<div class=\"notifications alert\"><p>' + message + '</p></class>');\n    $('#js-title').text('Something went wrong!');\n    $('#js-submit').hide(); // hide submit button\n    $('#js-reset').show(); // show reset button after\n  }\n\n  /**\n   * Increment the notification count on file upload\n   */\n  var notifyCount;\n\n  function incrementNotificationCount() {\n    if ($('#js-new-count').is(\":visible\")) {\n      notifyCount++;\n      $('#js-new-count').text(notifyCount);\n    } else {\n      notifyCount = 1;\n      $('#js-new-count').show().text(notifyCount);\n    }\n  }\n\n  /**\n   * Function to format bytes to bites\n   * see: bit.ly/19yoIPO\n   *\n   * @param  integer bytes\n   * @return integer bites\n   */\n  function bytesToSize(bytes) {\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Bytes';\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  }\n\n\n});\n"],"sourceRoot":"/source/"}